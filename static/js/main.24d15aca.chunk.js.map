{"version":3,"sources":["constants/Colors.js","helpers/Grid.js","constants/Grid.js","constants/ActionTypes.js","components/Grid.js","helpers/Colors.js","components/ColorSearch.js","components/PaintOptions.js","helpers/Export.js","components/ToolsContainer.js","images/wait.gif","components/modals/Loading.js","App.js","index.js"],"names":["aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","goldenrod","gold","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavenderblush","lavender","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","createRowStates","states","i","push","COLORS","gridMotion","up","offsetX","offsetY","down","left","right","getInitialGridState","createColStates","PAINT","ERASE","FILL","Grid","actionType","gridState","setGridState","color","setColor","colorPickerState","setColorPickerState","useState","mouseDown","setMouseDown","onCellHover","rowInd","colInd","fromCellClick","newGridState","originalColor","queue","currentX","currentY","coloredCells","x","y","pop","Object","keys","forEach","direction","newPosition","some","cell","isFillableGridPosition","unshift","length","floodFill","renderedGrid","map","row","hex","className","style","backgroundColor","onMouseDown","handleMouseDown","onMouseUp","onMouseOver","id","extractMatchingColors","searchVal","formattedSearchVal","toUpperCase","filter","key","base","query","baseIndex","queryIndex","indexOf","ColorSearch","searchQuery","setSearchQuery","onClick","onChange","e","target","value","placeholder","name","height","colorName","PaintOptions","setActionType","type","saveImage","setLoadModal","node","document","getElementById","domtoimage","toPng","then","dataUrl","link","createElement","download","href","click","catch","alert","ToolsContainer","Loading","props","show","src","loadGIF","App","loadModal","cursor","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.24d15aca.chunk.js","sourcesContent":["export const TRANSPARENT = \"white\";\r\nexport const COLOR_NOT_FOUND = -1;\r\n\r\nexport default {\r\n  aliceblue: \"#f0f8ff\",\r\n  antiquewhite: \"#faebd7\",\r\n  aqua: \"#00ffff\",\r\n  aquamarine: \"#7fffd4\",\r\n  azure: \"#f0ffff\",\r\n  beige: \"#f5f5dc\",\r\n  bisque: \"#ffe4c4\",\r\n  black: \"#000000\",\r\n  blanchedalmond: \"#ffebcd\",\r\n  blue: \"#0000ff\",\r\n  blueviolet: \"#8a2be2\",\r\n  brown: \"#a52a2a\",\r\n  burlywood: \"#deb887\",\r\n  cadetblue: \"#5f9ea0\",\r\n  chartreuse: \"#7fff00\",\r\n  chocolate: \"#d2691e\",\r\n  coral: \"#ff7f50\",\r\n  cornflowerblue: \"#6495ed\",\r\n  cornsilk: \"#fff8dc\",\r\n  crimson: \"#dc143c\",\r\n  cyan: \"#00ffff\",\r\n  darkblue: \"#00008b\",\r\n  darkcyan: \"#008b8b\",\r\n  darkgoldenrod: \"#b8860b\",\r\n  darkgray: \"#a9a9a9\",\r\n  darkgreen: \"#006400\",\r\n  darkgrey: \"#a9a9a9\",\r\n  darkkhaki: \"#bdb76b\",\r\n  darkmagenta: \"#8b008b\",\r\n  darkolivegreen: \"#556b2f\",\r\n  darkorange: \"#ff8c00\",\r\n  darkorchid: \"#9932cc\",\r\n  darkred: \"#8b0000\",\r\n  darksalmon: \"#e9967a\",\r\n  darkseagreen: \"#8fbc8f\",\r\n  darkslateblue: \"#483d8b\",\r\n  darkslategray: \"#2f4f4f\",\r\n  darkslategrey: \"#2f4f4f\",\r\n  darkturquoise: \"#00ced1\",\r\n  darkviolet: \"#9400d3\",\r\n  deeppink: \"#ff1493\",\r\n  deepskyblue: \"#00bfff\",\r\n  dimgray: \"#696969\",\r\n  dimgrey: \"#696969\",\r\n  dodgerblue: \"#1e90ff\",\r\n  firebrick: \"#b22222\",\r\n  floralwhite: \"#fffaf0\",\r\n  forestgreen: \"#228b22\",\r\n  fuchsia: \"#ff00ff\",\r\n  gainsboro: \"#dcdcdc\",\r\n  ghostwhite: \"#f8f8ff\",\r\n  goldenrod: \"#daa520\",\r\n  gold: \"#ffd700\",\r\n  gray: \"#808080\",\r\n  green: \"#008000\",\r\n  greenyellow: \"#adff2f\",\r\n  grey: \"#808080\",\r\n  honeydew: \"#f0fff0\",\r\n  hotpink: \"#ff69b4\",\r\n  indianred: \"#cd5c5c\",\r\n  indigo: \"#4b0082\",\r\n  ivory: \"#fffff0\",\r\n  khaki: \"#f0e68c\",\r\n  lavenderblush: \"#fff0f5\",\r\n  lavender: \"#e6e6fa\",\r\n  lawngreen: \"#7cfc00\",\r\n  lemonchiffon: \"#fffacd\",\r\n  lightblue: \"#add8e6\",\r\n  lightcoral: \"#f08080\",\r\n  lightcyan: \"#e0ffff\",\r\n  lightgoldenrodyellow: \"#fafad2\",\r\n  lightgray: \"#d3d3d3\",\r\n  lightgreen: \"#90ee90\",\r\n  lightgrey: \"#d3d3d3\",\r\n  lightpink: \"#ffb6c1\",\r\n  lightsalmon: \"#ffa07a\",\r\n  lightseagreen: \"#20b2aa\",\r\n  lightskyblue: \"#87cefa\",\r\n  lightslategray: \"#778899\",\r\n  lightslategrey: \"#778899\",\r\n  lightsteelblue: \"#b0c4de\",\r\n  lightyellow: \"#ffffe0\",\r\n  lime: \"#00ff00\",\r\n  limegreen: \"#32cd32\",\r\n  linen: \"#faf0e6\",\r\n  magenta: \"#ff00ff\",\r\n  maroon: \"#800000\",\r\n  mediumaquamarine: \"#66cdaa\",\r\n  mediumblue: \"#0000cd\",\r\n  mediumorchid: \"#ba55d3\",\r\n  mediumpurple: \"#9370db\",\r\n  mediumseagreen: \"#3cb371\",\r\n  mediumslateblue: \"#7b68ee\",\r\n  mediumspringgreen: \"#00fa9a\",\r\n  mediumturquoise: \"#48d1cc\",\r\n  mediumvioletred: \"#c71585\",\r\n  midnightblue: \"#191970\",\r\n  mintcream: \"#f5fffa\",\r\n  mistyrose: \"#ffe4e1\",\r\n  moccasin: \"#ffe4b5\",\r\n  navajowhite: \"#ffdead\",\r\n  navy: \"#000080\",\r\n  oldlace: \"#fdf5e6\",\r\n  olive: \"#808000\",\r\n  olivedrab: \"#6b8e23\",\r\n  orange: \"#ffa500\",\r\n  orangered: \"#ff4500\",\r\n  orchid: \"#da70d6\",\r\n  palegoldenrod: \"#eee8aa\",\r\n  palegreen: \"#98fb98\",\r\n  paleturquoise: \"#afeeee\",\r\n  palevioletred: \"#db7093\",\r\n  papayawhip: \"#ffefd5\",\r\n  peachpuff: \"#ffdab9\",\r\n  peru: \"#cd853f\",\r\n  pink: \"#ffc0cb\",\r\n  plum: \"#dda0dd\",\r\n  powderblue: \"#b0e0e6\",\r\n  purple: \"#800080\",\r\n  rebeccapurple: \"#663399\",\r\n  red: \"#ff0000\",\r\n  rosybrown: \"#bc8f8f\",\r\n  royalblue: \"#4169e1\",\r\n  saddlebrown: \"#8b4513\",\r\n  salmon: \"#fa8072\",\r\n  sandybrown: \"#f4a460\",\r\n  seagreen: \"#2e8b57\",\r\n  seashell: \"#fff5ee\",\r\n  sienna: \"#a0522d\",\r\n  silver: \"#c0c0c0\",\r\n  skyblue: \"#87ceeb\",\r\n  slateblue: \"#6a5acd\",\r\n  slategray: \"#708090\",\r\n  slategrey: \"#708090\",\r\n  snow: \"#fffafa\",\r\n  springgreen: \"#00ff7f\",\r\n  steelblue: \"#4682b4\",\r\n  tan: \"#d2b48c\",\r\n  teal: \"#008080\",\r\n  thistle: \"#d8bfd8\",\r\n  tomato: \"#ff6347\",\r\n  turquoise: \"#40e0d0\",\r\n  violet: \"#ee82ee\",\r\n  wheat: \"#f5deb3\",\r\n  white: \"#ffffff\",\r\n  whitesmoke: \"#f5f5f5\",\r\n  yellow: \"#ffff00\",\r\n  yellowgreen: \"#9acd32\",\r\n};\r\n","import COLORS, { TRANSPARENT } from \"../constants/Colors\";\r\nimport { GRID_DIMS } from \"../constants/Grid\";\r\n\r\nconst createRowStates = () => {\r\n  let states = [];\r\n  for (let i = 0; i < GRID_DIMS; i++) {\r\n    states.push(COLORS[TRANSPARENT]);\r\n  }\r\n  return states;\r\n};\r\n\r\nconst createColStates = () => {\r\n  let states = [];\r\n  for (let i = 0; i < GRID_DIMS; i++) {\r\n    states.push(createRowStates());\r\n  }\r\n  return states;\r\n};\r\n\r\nconst gridMotion = {\r\n  up: { offsetX: -1, offsetY: 0 },\r\n  down: { offsetX: 1, offsetY: 0 },\r\n  left: { offsetX: 0, offsetY: -1 },\r\n  right: { offsetX: 0, offsetY: 1 },\r\n};\r\n\r\nconst isFillableGridPosition = ({\r\n  currentX,\r\n  currentY,\r\n  coloredCells,\r\n  gridState,\r\n  originalColor,\r\n}) => {\r\n  if (currentX < 0 || currentX >= GRID_DIMS) return false;\r\n  if (currentY < 0 || currentY >= GRID_DIMS) return false;\r\n  if (gridState[currentX][currentY] !== originalColor) return false;\r\n  return !coloredCells.some(\r\n    (cell) => currentX === cell.x && currentY === cell.y\r\n  );\r\n};\r\n\r\nexport const floodFill = ({ gridState, color, rowInd, colInd }) => {\r\n  const originalColor = gridState[rowInd][colInd];\r\n  const queue = [{ currentX: rowInd, currentY: colInd }];\r\n  const coloredCells = [{ x: rowInd, y: colInd }];\r\n  gridState[rowInd][colInd] = color;\r\n  while (queue.length > 0) {\r\n    const { currentX, currentY } = queue.pop();\r\n    Object.keys(gridMotion).forEach((direction) => {\r\n      const { offsetX, offsetY } = gridMotion[direction];\r\n      const newPosition = {\r\n        currentX: currentX + offsetX,\r\n        currentY: currentY + offsetY,\r\n      };\r\n      if (\r\n        isFillableGridPosition({\r\n          currentX: newPosition.currentX,\r\n          currentY: newPosition.currentY,\r\n          coloredCells,\r\n          gridState,\r\n          originalColor,\r\n        })\r\n      ) {\r\n        queue.unshift(newPosition);\r\n        coloredCells.push({ x: newPosition.currentX, y: newPosition.currentY });\r\n        gridState[newPosition.currentX][newPosition.currentY] = color;\r\n      }\r\n    });\r\n  }\r\n  return gridState;\r\n};\r\n\r\nexport const getInitialGridState = () => createColStates();\r\n","export const GRID_DIMS = 50;\r\n","export const PAINT = \"PAINT\";\r\nexport const ERASE = \"ERASE\";\r\nexport const FILL = \"FILL\";\r\n","import React, { useState } from \"react\";\r\nimport { floodFill } from \"../helpers/Grid\";\r\nimport COLORS, { TRANSPARENT } from \"../constants/Colors\";\r\nimport \"../css/Grid.css\";\r\nimport { PAINT, ERASE } from \"../constants/ActionTypes\";\r\n\r\nconst Grid = ({\r\n  actionType,\r\n  gridState,\r\n  setGridState,\r\n  color,\r\n  setColor,\r\n  colorPickerState,\r\n  setColorPickerState,\r\n}) => {\r\n  const [mouseDown, setMouseDown] = useState(false);\r\n\r\n  const onCellHover = ({ rowInd, colInd, fromCellClick = false }) => {\r\n    if (!mouseDown && !fromCellClick) return;\r\n    let newGridState = [...gridState];\r\n    switch (actionType) {\r\n      case PAINT:\r\n        newGridState[rowInd][colInd] = color;\r\n        break;\r\n      case ERASE:\r\n        newGridState[rowInd][colInd] = COLORS[TRANSPARENT];\r\n        break;\r\n      default:\r\n        newGridState = floodFill({\r\n          gridState: [...gridState],\r\n          color,\r\n          rowInd,\r\n          colInd,\r\n        });\r\n    }\r\n    setGridState([...newGridState]);\r\n  };\r\n\r\n  const handleMouseDown = (rowInd, colInd) => {\r\n    if (colorPickerState) {\r\n      setColor(gridState[rowInd][colInd]);\r\n      setColorPickerState(false);\r\n      return;\r\n    }\r\n    setMouseDown(true);\r\n    onCellHover({\r\n      rowInd,\r\n      colInd,\r\n      fromCellClick: true,\r\n    });\r\n  };\r\n\r\n  const renderedGrid = (\r\n    <>\r\n      {gridState.map((row, rowInd) => (\r\n        <tr key={rowInd}>\r\n          {row.map((hex, colInd) => {\r\n            return (\r\n              <td\r\n                className=\"grid-cell\"\r\n                style={{ backgroundColor: hex }}\r\n                onMouseDown={() => handleMouseDown(rowInd, colInd)}\r\n                onMouseUp={() => setMouseDown(false)}\r\n                onMouseOver={() => onCellHover({ rowInd, colInd })}\r\n                key={colInd}\r\n              ></td>\r\n            );\r\n          })}\r\n        </tr>\r\n      ))}\r\n    </>\r\n  );\r\n\r\n  return (\r\n    <table id=\"canvas\" className=\"grid col border my-5\">\r\n      {renderedGrid}\r\n    </table>\r\n  );\r\n};\r\n\r\nexport default Grid;\r\n","import COLORS, { COLOR_NOT_FOUND } from \"../constants/Colors.js\";\r\n\r\nconst indexOf = (base, query) => {\r\n  for (let baseIndex = 0; baseIndex < base.length; baseIndex++) {\r\n    for (let queryIndex = 0; queryIndex < query.length; queryIndex++) {\r\n      if (base[baseIndex + queryIndex] !== query[queryIndex]) break;\r\n      if (queryIndex === query.length - 1) return baseIndex;\r\n    }\r\n  }\r\n  return COLOR_NOT_FOUND;\r\n};\r\n\r\nexport const extractMatchingColors = (searchVal) => {\r\n  const formattedSearchVal = searchVal.toUpperCase();\r\n  return searchVal\r\n    ? Object.keys(COLORS).filter(\r\n        (key) =>\r\n          indexOf(key.toUpperCase(), formattedSearchVal) !== COLOR_NOT_FOUND\r\n      )\r\n    : Object.keys(COLORS);\r\n};\r\n","import React, { useState } from \"react\";\r\nimport COLORS from \"../constants/Colors\";\r\nimport \"../css/ColorSearch.css\";\r\nimport { extractMatchingColors } from \"../helpers/Colors\";\r\n\r\nconst ColorSearch = ({ color, setColor, setColorPickerState }) => {\r\n  const [searchQuery, setSearchQuery] = useState(\"\");\r\n\r\n  return (\r\n    <div className=\"col\">\r\n      <div className=\"row mb-2\">\r\n        <div className=\"col-sm-4\">Current color:</div>\r\n        <div\r\n          className=\"col-sm-2 rounded\"\r\n          id=\"current-color\"\r\n          style={{ backgroundColor: color }}\r\n        ></div>\r\n        <i\r\n          className=\"fas fa-eye-dropper col-sm-1\"\r\n          onClick={() => setColorPickerState(true)}\r\n        ></i>\r\n      </div>\r\n      <input\r\n        id=\"color-search\"\r\n        className=\"col-12 mb-2 border mx-0 rounded\"\r\n        onChange={(e) => setSearchQuery(e.target.value)}\r\n        value={searchQuery}\r\n        placeholder=\"Pick a color\"\r\n        name=\"color\"\r\n      />\r\n      <div\r\n        className=\"col-12  overflow-auto rounded\"\r\n        style={{ height: \"150px\" }}\r\n      >\r\n        {extractMatchingColors(searchQuery).map((colorName) => (\r\n          <div\r\n            className=\"row mx-0 my-2\"\r\n            onClick={() => setColor(COLORS[colorName])}\r\n          >\r\n            <div\r\n              className=\"col-2 rounded\"\r\n              style={{ backgroundColor: COLORS[colorName] }}\r\n            ></div>\r\n            <div className=\"col m-0\">{colorName}</div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ColorSearch;\r\n","import React from \"react\";\r\nimport \"../css/PaintOptions.css\";\r\nimport { PAINT, ERASE, FILL } from \"../constants/ActionTypes\";\r\n\r\nconst PaintOptions = ({ actionType, setActionType }) => {\r\n  return (\r\n    <div className=\"col\" id=\"main-container\">\r\n      <div className=\"row justify-content-center mb-1\">\r\n        <button\r\n          type=\"button\"\r\n          className={`col-sm-6 btn btn-outline-primary ${\r\n            actionType === PAINT && \"active\"\r\n          }`}\r\n          id=\"paint-btn\"\r\n          onClick={() => setActionType(PAINT)}\r\n        >\r\n          PAINT\r\n        </button>\r\n      </div>\r\n      <div className=\"row justify-content-center mb-1\">\r\n        <button\r\n          type=\"button\"\r\n          className={`col-sm-6 btn btn-outline-primary ${\r\n            actionType === ERASE && \"active\"\r\n          }`}\r\n          id=\"erase-btn\"\r\n          onClick={() => setActionType(ERASE)}\r\n        >\r\n          ERASE\r\n        </button>\r\n      </div>\r\n      <div className=\"row justify-content-center\">\r\n        <button\r\n          type=\"button\"\r\n          className={`col-sm-6 btn btn-outline-primary ${\r\n            actionType === FILL && \"active\"\r\n          }`}\r\n          id=\"fill-btn\"\r\n          onClick={() => setActionType(FILL)}\r\n        >\r\n          FILL\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PaintOptions;\r\n","import domtoimage from \"dom-to-image\";\r\n\r\nconst saveImage = (setLoadModal) => {\r\n  const node = document.getElementById(\"canvas\");\r\n  domtoimage\r\n    .toPng(node)\r\n    .then((dataUrl) => {\r\n      const link = document.createElement(\"a\");\r\n      link.download = \"canvas.png\";\r\n      link.href = dataUrl;\r\n      setLoadModal(false);\r\n      link.click();\r\n    })\r\n    .catch(() => {\r\n      alert(\"Something went wrong!\");\r\n    });\r\n};\r\n\r\nexport default saveImage;\r\n","import React from \"react\";\r\nimport \"../css/ToolsContainer.css\";\r\nimport ColorSearch from \"./ColorSearch\";\r\nimport PaintOptions from \"./PaintOptions\";\r\nimport saveImage from \"../helpers/Export\";\r\nimport { getInitialGridState } from \"../helpers/Grid\";\r\n\r\nconst ToolsContainer = ({\r\n  color,\r\n  setColor,\r\n  actionType,\r\n  setActionType,\r\n  setColorPickerState,\r\n  setGridState,\r\n  setLoadModal,\r\n}) => {\r\n  return (\r\n    <div className=\"col-2 border\" id=\"left-container\">\r\n      <div className=\"row mb-4 pt-3\">\r\n        <PaintOptions actionType={actionType} setActionType={setActionType} />\r\n      </div>\r\n      <div className=\"row py-0 my-3\" id=\"color-search-container\">\r\n        <ColorSearch\r\n          setColor={setColor}\r\n          color={color}\r\n          setColorPickerState={setColorPickerState}\r\n        />\r\n      </div>\r\n      <div className=\"row\" id=\"new-pixel-art\">\r\n        <button\r\n          type=\"button\"\r\n          className=\"col btn btn-outline-primary mx-4 mb-2\"\r\n          onClick={() => setGridState(getInitialGridState())}\r\n        >\r\n          New Pixel Art\r\n        </button>\r\n      </div>\r\n      <div className=\"row\" id=\"save-pixel-art\">\r\n        <button\r\n          type=\"button\"\r\n          className=\"col btn btn-outline-primary mx-4\"\r\n          onClick={() => {\r\n            setLoadModal(true);\r\n            saveImage(setLoadModal);\r\n          }}\r\n        >\r\n          Save Pixel Art\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ToolsContainer;\r\n","export default __webpack_public_path__ + \"static/media/wait.c2277320.gif\";","import React from \"react\";\r\nimport loadGIF from \"../../images/wait.gif\";\r\nimport \"../../css/Modal.css\";\r\n\r\nexport const Loading = (props) => {\r\n  if (!props.show) {\r\n    return null;\r\n  }\r\n  return (\r\n    <div className=\"modal-div\">\r\n      <img src={loadGIF} className=\"popup\"></img>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loading;\r\n","import { useState } from \"react\";\r\nimport \"./css/App.css\";\r\nimport { getInitialGridState } from \"./helpers/Grid\";\r\nimport { PAINT } from \"./constants/ActionTypes\";\r\nimport Grid from \"./components/Grid\";\r\nimport ToolsContainer from \"./components/ToolsContainer\";\r\nimport Loading from \"./components/modals/Loading\";\r\n\r\nfunction App() {\r\n  const [gridState, setGridState] = useState(getInitialGridState());\r\n  const [actionType, setActionType] = useState(PAINT);\r\n  const [color, setColor] = useState();\r\n  const [colorPickerState, setColorPickerState] = useState(false);\r\n  const [loadModal, setLoadModal] = useState(false);\r\n\r\n  return (\r\n    <div className=\"App container\" style={{ cursor: \"pointer\" }}>\r\n      <Loading show={loadModal} />\r\n      <div className=\"row row.row-eq-height > .col-xs-4\">\r\n        <ToolsContainer\r\n          color={color}\r\n          setColor={setColor}\r\n          actionType={actionType}\r\n          setActionType={setActionType}\r\n          setColorPickerState={setColorPickerState}\r\n          setGridState={setGridState}\r\n          setLoadModal={setLoadModal}\r\n        />\r\n        <Grid\r\n          color={color}\r\n          setColor={setColor}\r\n          actionType={actionType}\r\n          gridState={gridState}\r\n          setGridState={setGridState}\r\n          colorPickerState={colorPickerState}\r\n          setColorPickerState={setColorPickerState}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}